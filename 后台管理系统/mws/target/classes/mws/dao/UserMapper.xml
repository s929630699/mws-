<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mws.dao.UserMapper">
<!--SQL片段 -->
     <sql id="getUserListWhere">
          <where>
               <if test="id != null">
                    id like "%"#{id}"%"
               </if>
               <if test="username != null and username !=''">
                    username = #{username}
               </if>
               <if test="telephone != null">
                    and telephone= #{telephone}
               </if>
          </where>
     </sql>
     <select id="getUserList" parameterType="User"
     resultMap="UserResult">
          select * from `user`
          <include refid="getUserListWhere" />
          <!-- 执行分页查询
          <if test="start !=null and rows != null">
               limit #{start},#{rows}
          </if>
           -->
     </select>
     
     <select id="getUserById" parameterType="int" resultMap="UserResult">
     	select * from `user` where id=#{id}
     </select>
     
     <select id="getOneUserByUsername" parameterType="String" resultMap="UserResult">
     	select * from `user` where username=#{username}
     </select>
     
     <select id="getUserByUsername" parameterType="String" resultMap="UserResult">
     	select * from `user` where username like concat ('%',#{username},'%')
     </select>
     
     <select id="getUserByTelephone" parameterType="String" resultMap="UserResult">
     	select * from `user` where telephone like concat ('%',#{telephone},'%')
     </select>
     
     <select id="getUserByOpenid" parameterType="String" resultType="User">
		select * from user where wx_openid=#{wx_openid}
	</select>
     
     <!-- 添加用户 -->
     <insert id="insertUser" parameterType="User">
		insert into user (username, password, gender, telephone, introduce,
		role,registTime )
		values ( #{username}, #{password}, #{gender}, #{telephone}, #{introduce},
		#{role},#{registTime} )
	</insert>
	
	<insert id="insertUserRole" parameterType="UserRole">
		insert into `user_role` (userId,roleId) values (#{userId},#{roleId})
	</insert>
	
	<!-- 修改用户 -->
     <update id="updateUser" parameterType="User">
          update user
          set username=#{username},password=#{password},gender=#{gender},telephone=#{telephone},introduce=#{introduce},
          role=#{role},registTime=#{registTime}
          where id=#{id}
     </update>
     
     <!-- 删除用户 -->
     <delete id="deleteUser" parameterType="int">
     	delete from user where id=#{id}
     </delete>
     
     <!-- 删除用户 -->
     <delete id="deleteUserRole" parameterType="int">
     	delete from `user_role` where userId=#{id}
     </delete>
	
	<insert id="createUser" parameterType="User"
		useGeneratedKeys="true" keyProperty="id">
		insert into user(
		username,
		password,
		gender,
		telephone,
		introduce,
		role,
		registTime,
		wx_openid,
		token
		)
		values(#{username},
		#{password},
		#{gender},
		#{telephone},
		#{introduce},
		#{role},
		#{registTime},
		#{wx_openid},
		#{token}
		);
	</insert>
	<insert id="addUserWithRole" parameterType="int">
		insert into `user_role` (userId,roleId) values(#{userId},2)
	</insert>
	
	
     
     <!-- 此处定义了一个查询结果映射类型，用于完成Product与Category的1对1关系映射 -->
     <resultMap type="User"  id="UserResult">
          <id property="id" column="id" />
          <result property="username" column="username" />
          <result property="password" column="password" />
          <result property="gender" column="gender" />
          <result property="telephone" column="telephone" />
          <result property="introduce" column="introduce" />
          <result property="role" column="role"  />
          <result property="registTime" column="registTime"  />
     </resultMap>
</mapper>